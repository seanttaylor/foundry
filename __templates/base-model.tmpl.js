
export const BaseModelTmpl = {
  /**
   * 
   * @param {Object} options
   * @param {String} options.datasource - the type of persistence layer to import (e.g json, sqlite, postgres, mysql, mongodb)
   * @returns {String}
   */
  getTemplate: (options) => `// AUTO-GENERATED BY FOUNDRY BEDROCK
import { Database } from '../db/init.js';

const db = await Database.init();

export class BaseModel {
  __data = {};

  constructor(attributes = {}) {
    this.__db = db;
    Object.assign(this.__data, attributes);
  }

  static get table() {
    throw new Error('Must implement table getter');
  }

  static get columns() {
    throw new Error('Must implement columns getter');
  }

  async put() {
    if (this._id) {
      return this._update();
    } else {
      return this._create();
    }
  }

  async _create() {
    const name = this.constructor.table;
    this._id = await this.__db.insert(name, this.__data);
    return this._id;
  }

  async _update() {
    const name = this.constructor.table;
    await this.__db.update(name, this._id, this.__data);
  }
}
`};