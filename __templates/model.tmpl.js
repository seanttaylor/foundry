export const ModelTmpl = {
    /**
     * Generates a class corresponding to a component defined in an OpenAPI specification
     * @param {Object} options
     * @param {String[]} options.accessors - the getters and setters used to update a database column
     * @param {String} options.className - name of the resulting class 
     * @param {String} options.tableName - the database table to class is associated with
     * @returns {String}
     */
    getTemplate: ({ accessors, className, tableName }) => { 
        try {
            return `// AUTO-GENERATED BY FOUNDRY BEDROCK
import { BaseModel } from './BaseModel.js';

export class ${className} extends BaseModel {
    constructor(props) {
        super(props);
    }

    static get table() {
        return '${tableName}';
    }

    /**
     * @param {string} id - Record identifier
     * @returns {Promise<${className}|null>}
     */
    static async findById(id) {
        const row = await this.__db.collection('${tableName}').getById(id);
        return row ? new this(row) : null;
    }

    /**
     * @param {String} id
     * @returns {void}
     */
    static async delete(id) {
        await this.__db.collection('${tableName}').delete(id);
    }
${accessors}
}`
        } catch(ex) {
            console.error(`INTERNAL_ERROR (Foundry.Bedrock): Exception encountered while generating model template (${options.className}) See details -> ${ex.message}`)
        }
    }
};
